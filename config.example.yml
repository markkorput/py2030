py2030:
  profiles:
    ssh:
      stop_event: 'finished'

      ssh_remotes: # this component still has to be implemented
        local:
          verbose: true
          hostname: 'localhost'
          username: 'pi'
          password: 'raspberry'
          done_event: 'finished'
          files:
            # copies changes to local config.yml to rpi2.local
            'examples/three-slave*/*': '~/Public'

    looper: # profile
      start_event: 'loop'

      delay_events:
        looper: # name/ID
          source: 'loop'
          delay: 60 # seconds
          target: 'loop'
          halt: 'stop'
          pause: 'pause'

      # video playback component
      omxvideo:
        verbose: true
        args: ['--no-osd', '--adev', 'local', '-b']
        playlist:
          - '/home/pi/videos/vid1.mov'
          - '/home/pi/videos/vid2.mov'
          - '/home/pi/videos/vid3.mov'
          - '/home/pi/videos/vid4.mov'
          - '/home/pi/videos/vid5.mov'
        input_events:
          # format: <event_id>: <omx-action>
          'loop': 'start' # loads and start video. Accepts a number but defaults to zero (0), meaning first video in playlist
          'stop': 'stop' # stop playback
          'pause': 'toggle' # toggle between play/pause
          # '': 'play' # start/resume playback
          # '': 'pause' # pause, does nothing when already paused
          # '': 'seek' # jump to specified playback position (specified in seconds from start of video)
          # '': 'load' # load a video (by playlist number)

      # send osc messages to other devices
      osc_outputs:
        bcast:
          verbose: true
          ip: 192.168.2.255
          # hostname: 'rpi4.local'
          port: 2030
          input_events:
            loop: '/loop'
            stop: '/stop'
            pause: '/pause'

      midi_inputs:
        akai:
          port: 1
          verbose: true
          output_events:
            144: # midi message type; note on
              36: 'start' # midi note 36 triggers event start0
              37:
                event: 'start'
                params: [1]
              38: 'start2'
              39: 'start3'
              40: 'start4'
              41: 'pause'
              42: 'stop'
              43: 'stop'

    osc_to_event: # profile
      reload_event: '/reload'

      osc_inputs: # input component
        broadcast:
          ip: ''
          port: 2030
          verbose: true
          output_events:
            auto: true
            '/some_message': 'some_event'

    reloader:
      reload_event: '/reload'

      osc_inputs:
        bcast:
          ip: ''
          port: 2030
          verbose: true
          output_events:
            auto: true

    event_demo:
      some_components:
        input_events:
          # specify actions and the events they are triggerd by
          # format:
          # <component-specific action-to-be-triggerd>: <event_name>
          # OR
          # <component-specific action-to-be-triggerd>: [<event_name1>, <event_name2>, ...]
          action1: 'eventName1' # event takes no arguments
          action2: ['eventName2a', 'eventName2b']

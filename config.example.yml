py2030:
  profiles:
    ssh:
      stop_event: 'finished'

      ssh_remotes: # this component still has to be implemented
        local:
          verbose: true
          hostname: 'localhost'
          username: 'pi'
          password: 'raspberry'
          done_event: 'finished'
          files:
            # copies changes to local config.yml to rpi2.local
            'examples/three-slave*/*': '~/Public'

    looper: # profile
      start_event: 'loop'

      delay_events:
        looper: # name/ID
          source: 'loop'
          delay: 60 # seconds
          target: 'loop'
          halt: 'stop'
          pause: 'pause'

      event_to_event:
        'start': ['load', 'loop']
        'stop': ['stoploop', 'unload']

      # video playback component
      omxvideo:
        verbose: true
        args: ['--no-osd', '--adev', 'local', '-b']
        playlist:
          - '/home/pi/videos/vid1.mov'
          - '/home/pi/videos/vid2.mov'
          - '/home/pi/videos/vid3.mov'
          - '/home/pi/videos/vid4.mov'
          - '/home/pi/videos/vid5.mov'
        input_events:
          play: '' # start/resume playback
          # start: '' # requires vid playlist number
          stop: ''
          pause: '' # pause, does nothing when already paused
          toggle: '' # toggle between play/pause
          seek: '' # jump to specified playback position (specified in seconds from start of video)
          load: '' # load a video (by playlist number)

          input_events:


      # send osc messages
      osc_outputs:
        bcast:
          verbose: true
          ip: 192.168.2.255
          # hostname: 'rpi4.local'
          port: 2030

      event_to_osc:
        bcast:
          verbose: true
          loop: '/loop'
          stop: '/stop'
          pause: '/pause'

      midi_inputs:
        akai:
          port: 1
          verbose: true

      midi_to_event:
        akai:
          verbose: true
          144: # midi message type; note on
            36: 'start0' # midi note 36 triggers event start0
            37: 'start1'
            38: 'start2'
            39: 'start3'
            40: 'start4'
            41: 'pause'
            42: 'stop'
            43: 'stop'
            36:
              event: 'start'
              params: [0]

      event_to_omx:
        verbose: true
        loop:
          action: 'start'
          # params:
          # - 0
        pause: 'toggle'
        stop: 'stop'

    osc_to_event: # profile
      reload_event: '/reload'

      osc_inputs: # input component
        broadcast:
          ip: ''
          port: 2030
          verbose: true

      osc_to_event: # mapping component
        broadcast: # osc input component
          verbose: true
          auto: true
          '/some_message': 'some_event'


    reloader:
      reload_event: '/reload'

      osc_inputs:
        bcast:
          ip: ''
          port: 2030
          verbose: true

      osc_to_event:
        bcast:
          verbose: true
          auto: true

    event_demo:
      some_components:
        event_inputs:
          # specify actions and the events they are triggerd by
          # format:
          # <component-specific action-to-be-triggerd>: <event_name>
          # OR
          # <component-specific action-to-be-triggerd>: [<event_name1>, <event_name2>, ...]
          action1: 'eventName1' # event takes no arguments
          action2: ['eventName2a', 'eventName2b']
